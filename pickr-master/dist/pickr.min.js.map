{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/js/utils/utils.js","webpack:///./src/js/utils/color.js","webpack:///./src/js/utils/hsvacolor.js","webpack:///./src/js/libs/moveable.js","webpack:///./src/js/libs/selectable.js","webpack:///./src/js/libs/nanopop.js","webpack:///./src/js/template.js","webpack:///./src/js/pickr.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","on","eventListener","off","method","elements","events","fn","options","HTMLCollection","NodeList","Array","from","isArray","el","ev","_objectSpread","capture","slice","arguments","createElementFromString","html","div","document","createElement","innerHTML","trim","firstElementChild","removeAttribute","getAttribute","createFromTemplate","str","resolve","element","base","con","subtree","child","children","arr","sub","push","keys","length","eventPath","evt","path","composedPath","target","parentElement","adjustableInputNumbers","mapper","v","handleScroll","e","inc","Number","shiftKey","ctrlKey","deltaY","index","selectionStart","replace","focus","setSelectionRange","preventDefault","dispatchEvent","Event","passive","min","max","floor","round","Math","hsvToRgb","h","f","q","mod","hsvToHsl","rgbToHsv","g","b","minVal","maxVal","delta","dr","dg","db","cmykToHsv","y","k","hslToHsv","hexToHsv","hex","match","map","parseInt","parseToHSVA","toLowerCase","ctx","getContext","fillStyle","standardizeColor","regex","cmyk","rgba","hsla","hsva","hexa","numarize","array","test","undefined","invalid","type","exec","alpha","values","a","split","join","raw","substring","HSVaColor","original","next","precision","toFixed","that","toHSVA","toString","concat","toHSLA","toRGBA","toCMYK","rgb","hsvToCmyk","toHEXA","padStart","hsvToHex","toUpperCase","clone","clamp","Moveable","opt","assign","lock","onchange","onstop","_tapstart","_","_tapstop","_tapmove","cache","wrapper","getBoundingClientRect","x","touch","touches","clientX","clientY","left","width","top","height","style","offsetWidth","offsetHeight","cx","cy","trigger","update","destroy","Selectable","className","onTap","forEach","classList","Nanopop","reference","padding","vBehaviour","start","middle","end","hBehaviour","right","bottom","getInfo","pos","cached","position","variant","isVertical","rb","eb","positions","vertical","variants","leastApplied","apply","bevs","vars","styleprop","adder","win","ch","sv","rot","v2Ok","v1Ok","template","components","strings","useAsButton","inline","appClass","theme","lockOpacity","lo","hidden","palette","preview","hue","opacity","interaction","input","save","cancel","clear","int","find","add","contains","Pickr","constructor","pickr_defineProperty","this","init","hide","show","change","changestop","swatchselect","disabled","comparison","closeOnScroll","outputPrecision","autoReposition","swatches","sliders","default","defaultRepresentation","adjustableNumbers","showAlways","closeWithKey","includes","_preBuild","_buildComponents","_bindEvents","_finalBuild","color","addSwatch","_nanopop","_root","button","app","requestAnimationFrame","cb","body","setColor","_rePositioningPicker","_representation","setColorRepresentation","_initializingActive","_emit","reduce","pv","cv","ci","querySelector","shadowRoot","buildPickr","appendChild","removeChild","parent","nextSibling","insertBefore","remove","parentNode","replaceChild","disable","transition","lastColor","inst","cs","repeat","so","sh","picker","_color","_recalc","_updateOutput","cssRGBaString","background","currentColor","slider","backgroundColor","selectable","_components","eventBindings","_clearColor","setHSVA","_lastColor","applyColor","result","stopImmediatePropagation","ck","isOpen","code","some","ranges","step","range","getColorRepresentation","nv","toPrecision","timeout","setTimeout","rs","clearTimeout","_eventBindings","matchMedia","matches","margin","silent","_parseLocalColor","alphaMakesAChange","event","args","_eventListener","callBacks","indexOf","splice","_swatchColors","hsvaColorObject","removeSwatch","swatchColor","destroyAndRemove","recalc","string","utype","startsWith","click","getColor","getRoot","enable","utils","libs","version"],"mappings":"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","file":"pickr.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Pickr\"] = factory();\n\telse\n\t\troot[\"Pickr\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Add event(s) to element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const on = eventListener.bind(null, 'addEventListener');\n\n/**\n * Remove event(s) from element(s).\n * @param elements DOM-Elements\n * @param events Event names\n * @param fn Callback\n * @param options Optional options\n * @return Array passed arguments\n */\nexport const off = eventListener.bind(null, 'removeEventListener');\n\nfunction eventListener(method, elements, events, fn, options = {}) {\n\n    // Normalize array\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\n        elements = Array.from(elements);\n    } else if (!Array.isArray(elements)) {\n        elements = [elements];\n    }\n\n    if (!Array.isArray(events)) {\n        events = [events];\n    }\n\n    for (const el of elements) {\n        for (const ev of events) {\n            el[method](ev, fn, {capture: false, ...options});\n        }\n    }\n\n    return Array.prototype.slice.call(arguments, 1);\n}\n\n/**\n * Creates an DOM-Element out of a string (Single element).\n * @param html HTML representing a single element\n * @returns {Element | null} The element.\n */\nexport function createElementFromString(html) {\n    const div = document.createElement('div');\n    div.innerHTML = html.trim();\n    return div.firstElementChild;\n}\n\n/**\n * Removes an attribute from a HTMLElement and returns the value.\n * @param el\n * @param name\n * @return {string}\n */\nexport function removeAttribute(el, name) {\n    const value = el.getAttribute(name);\n    el.removeAttribute(name);\n    return value;\n}\n\n/**\n * Creates a new html element, every element which has\n * a ':ref' attribute will be saved in a object (which will be returned)\n * where the value of ':ref' is the object-key and the value the HTMLElement.\n *\n * It's possible to create a hierarchy if you add a ':obj' attribute. Every\n * sibling will be added to the object which will get the name from the 'data-con' attribute.\n *\n * If you want to create an Array out of multiple elements, you can use the ':arr' attribute,\n * the value defines the key and all elements, which has the same parent and the same 'data-arr' attribute,\n * would be added to it.\n *\n * @param str - The HTML String.\n */\nexport function createFromTemplate(str) {\n\n    // Recursive function to resolve template\n    function resolve(element, base = {}) {\n\n        // Check key and container attribute\n        const con = removeAttribute(element, ':obj');\n        const key = removeAttribute(element, ':ref');\n        const subtree = con ? (base[con] = {}) : base;\n\n        // Check and save element\n        key && (base[key] = element);\n        for (const child of Array.from(element.children)) {\n            const arr = removeAttribute(child, ':arr');\n            const sub = resolve(child, arr ? {} : subtree);\n\n            if (arr) {\n\n                // Check if there is already an array and add element\n                (subtree[arr] || (subtree[arr] = []))\n                    .push(Object.keys(sub).length ? sub : child);\n            }\n        }\n\n        return base;\n    }\n\n    return resolve(createElementFromString(str));\n}\n\n/**\n * Polyfill for safari & firefox for the eventPath event property.\n * @param evt The event object.\n * @return [String] event path.\n */\nexport function eventPath(evt) {\n    let path = evt.path || (evt.composedPath && evt.composedPath());\n    if (path) return path;\n\n    let el = evt.target.parentElement;\n    path = [evt.target, el];\n    while (el = el.parentElement) path.push(el);\n\n    path.push(document, window);\n    return path;\n}\n\n/**\n * Creates the ability to change numbers in an input field with the scroll-wheel.\n * @param el\n * @param mapper\n */\nexport function adjustableInputNumbers(el, mapper = v => v) {\n\n    function handleScroll(e) {\n        const inc = ([0.001, 0.01, 0.1])[Number(e.shiftKey || e.ctrlKey * 2)] * (e.deltaY < 0 ? 1 : -1);\n\n        let index = 0;\n        let off = el.selectionStart;\n        el.value = el.value.replace(/[\\d.]+/g, (v, i) => {\n\n            // Check if number is in cursor range and increase it\n            if (i <= off && i + v.length >= off) {\n                off = i;\n                return mapper(Number(v), inc, index);\n            }\n\n            index++;\n            return v;\n        });\n\n        el.focus();\n        el.setSelectionRange(off, off);\n\n        // Prevent default and trigger input event\n        e.preventDefault();\n        el.dispatchEvent(new Event('input'));\n    }\n\n    // Bind events\n    on(el, 'focus', () => on(window, 'wheel', handleScroll, {passive: false}));\n    on(el, 'blur', () => off(window, 'wheel', handleScroll));\n}\n","// Shorthands\nconst {min, max, floor, round} = Math;\n\n/**\n * Tries to convert a color name to rgb/a hex representation\n * @param name\n * @returns {string | CanvasGradient | CanvasPattern}\n */\nfunction standardizeColor(name) {\n\n    // Since invalid color's will be parsed as black, filter them out\n    if (name.toLowerCase() === 'black') {\n        return '#000000';\n    }\n\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.fillStyle = name;\n    return ctx.fillStyle === '#000000' ? null : ctx.fillStyle;\n}\n\n/**\n * Convert HSV spectrum to RGB.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} Array with rgb values.\n */\nexport function hsvToRgb(h, s, v) {\n    h = (h / 360) * 6;\n    s /= 100;\n    v /= 100;\n\n    let i = floor(h);\n\n    let f = h - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n\n    let mod = i % 6;\n    let r = [v, q, p, p, t, v][mod];\n    let g = [t, v, v, q, p, p][mod];\n    let b = [p, p, t, v, v, q][mod];\n\n    return [\n        r * 255,\n        g * 255,\n        b * 255\n    ];\n}\n\n/**\n * Convert HSV spectrum to Hex.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {string[]} Hex values\n */\nexport function hsvToHex(h, s, v) {\n    return hsvToRgb(h, s, v).map(v =>\n        round(v).toString(16).padStart(2, '0')\n    );\n}\n\n/**\n * Convert HSV spectrum to CMYK.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} CMYK values\n */\nexport function hsvToCmyk(h, s, v) {\n    const rgb = hsvToRgb(h, s, v);\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    let k, c, m, y;\n\n    k = min(1 - r, 1 - g, 1 - b);\n\n    c = k === 1 ? 0 : (1 - r - k) / (1 - k);\n    m = k === 1 ? 0 : (1 - g - k) / (1 - k);\n    y = k === 1 ? 0 : (1 - b - k) / (1 - k);\n\n    return [\n        c * 100,\n        m * 100,\n        y * 100,\n        k * 100\n    ];\n}\n\n/**\n * Convert HSV spectrum to HSL.\n * @param h Hue\n * @param s Saturation\n * @param v Value\n * @returns {number[]} HSL values\n */\nexport function hsvToHsl(h, s, v) {\n    s /= 100, v /= 100;\n\n    let l = (2 - s) * v / 2;\n\n    if (l !== 0) {\n        if (l === 1) {\n            s = 0;\n        } else if (l < 0.5) {\n            s = s * v / (l * 2);\n        } else {\n            s = s * v / (2 - l * 2);\n        }\n    }\n\n    return [\n        h,\n        s * 100,\n        l * 100\n    ];\n}\n\n/**\n * Convert RGB to HSV.\n * @param r Red\n * @param g Green\n * @param b Blue\n * @return {number[]} HSV values.\n */\nfunction rgbToHsv(r, g, b) {\n    r /= 255, g /= 255, b /= 255;\n\n    let h, s, v;\n    const minVal = min(r, g, b);\n    const maxVal = max(r, g, b);\n    const delta = maxVal - minVal;\n\n    v = maxVal;\n    if (delta === 0) {\n        h = s = 0;\n    } else {\n        s = delta / maxVal;\n        let dr = (((maxVal - r) / 6) + (delta / 2)) / delta;\n        let dg = (((maxVal - g) / 6) + (delta / 2)) / delta;\n        let db = (((maxVal - b) / 6) + (delta / 2)) / delta;\n\n        if (r === maxVal) {\n            h = db - dg;\n        } else if (g === maxVal) {\n            h = (1 / 3) + dr - db;\n        } else if (b === maxVal) {\n            h = (2 / 3) + dg - dr;\n        }\n\n        if (h < 0) {\n            h += 1;\n        } else if (h > 1) {\n            h -= 1;\n        }\n    }\n\n    return [\n        h * 360,\n        s * 100,\n        v * 100\n    ];\n}\n\n/**\n * Convert CMYK to HSV.\n * @param c Cyan\n * @param m Magenta\n * @param y Yellow\n * @param k Key (Black)\n * @return {number[]} HSV values.\n */\nfunction cmykToHsv(c, m, y, k) {\n    c /= 100;\n    m /= 100;\n    y /= 100;\n    k /= 100;\n\n    const r = (1 - min(1, c * (1 - k) + k)) * 255;\n    const g = (1 - min(1, m * (1 - k) + k)) * 255;\n    const b = (1 - min(1, y * (1 - k) + k)) * 255;\n\n    return [...rgbToHsv(r, g, b)];\n}\n\n/**\n * Convert HSL to HSV.\n * @param h Hue\n * @param s Saturation\n * @param l Lightness\n * @return {number[]} HSV values.\n */\nfunction hslToHsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    s *= l < 0.5 ? l : 1 - l;\n\n    let ns = (2 * s / (l + s)) * 100;\n    let v = (l + s) * 100;\n    return [h, ns, v];\n}\n\n/**\n * Convert HEX to HSV.\n * @param hex Hexadecimal string of rgb colors, can have length 3 or 6.\n * @return {number[]} HSV values.\n */\nfunction hexToHsv(hex) {\n    return rgbToHsv(...hex.match(/.{2}/g).map(v => parseInt(v, 16)));\n}\n\n/**\n * Try's to parse a string which represents a color to a HSV array.\n * Current supported types are cmyk, rgba, hsla and hexadecimal.\n * @param str\n * @return {*}\n */\nexport function parseToHSVA(str) {\n\n    // Check if string is a color-name\n    str = str.match(/^[a-zA-Z]+$/) ? standardizeColor(str) : str;\n\n    // Regular expressions to match different types of color represention\n    const regex = {\n        cmyk: /^cmyk[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)/i,\n        rgba: /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsla: /^((hsla)|hsl)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hsva: /^((hsva)|hsv)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i,\n        hexa: /^#?(([\\dA-Fa-f]{3,4})|([\\dA-Fa-f]{6})|([\\dA-Fa-f]{8}))$/i\n    };\n\n    /**\n     * Takes an Array of any type, convert strings which represents\n     * a number to a number an anything else to undefined.\n     * @param array\n     * @return {*}\n     */\n    const numarize = array => array.map(v => /^(|\\d+)\\.\\d+|\\d+$/.test(v) ? Number(v) : undefined);\n\n    let match;\n    invalid: for (const type in regex) {\n\n        // Check if current scheme passed\n        if (!(match = regex[type].exec(str)))\n            continue;\n\n        // match[2] does only contain a truly value if rgba, hsla, or hsla got matched\n        const alpha = !!match[2];\n\n        // Try to convert\n        switch (type) {\n            case 'cmyk': {\n                let [, c, m, y, k] = numarize(match);\n\n                if (c > 100 || m > 100 || y > 100 || k > 100)\n                    break invalid;\n\n                return {values: cmykToHsv(c, m, y, k), type};\n            }\n            case 'rgba': {\n                let [, , , r, g, b, a] = numarize(match);\n\n                if (r > 255 || g > 255 || b > 255 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...rgbToHsv(r, g, b), a], a, type};\n            }\n            case 'hexa': {\n                let [, hex] = match;\n\n                if (hex.length === 4 || hex.length === 3) {\n                    hex = hex.split('').map(v => v + v).join('');\n                }\n\n                const raw = hex.substring(0, 6);\n                let a = hex.substring(6);\n\n                // Convert 0 - 255 to 0 - 1 for opacity\n                a = a ? (parseInt(a, 16) / 255) : undefined;\n\n                return {values: [...hexToHsv(raw), a], a, type};\n            }\n            case 'hsla': {\n                let [, , , h, s, l, a] = numarize(match);\n\n                if (h > 360 || s > 100 || l > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [...hslToHsv(h, s, l), a], a, type};\n            }\n            case 'hsva': {\n                let [, , , h, s, v, a] = numarize(match);\n\n                if (h > 360 || s > 100 || v > 100 || a < 0 || a > 1 || (alpha === !a))\n                    break invalid;\n\n                return {values: [h, s, v, a], a, type};\n            }\n        }\n    }\n\n    return {values: null, type: null};\n}\n","import {hsvToHsl, hsvToRgb, hsvToCmyk, hsvToHex} from './color';\n\n/**\n * Simple class which holds the properties\n * of the color represention model hsla (hue saturation lightness alpha)\n */\nexport function HSVaColor(h = 0, s = 0, v = 0, a = 1) {\n    const mapper = (original, next) => (precision = -1) => {\n        return next(~precision ? original.map(v => Number(v.toFixed(precision))) : original);\n    };\n\n    const that = {\n        h, s, v, a,\n\n        toHSVA() {\n            const hsva = [that.h, that.s, that.v, that.a];\n            hsva.toString = mapper(hsva, arr => `hsva(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsva;\n        },\n\n        toHSLA() {\n            const hsla = [...hsvToHsl(that.h, that.s, that.v), that.a];\n            hsla.toString = mapper(hsla, arr => `hsla(${arr[0]}, ${arr[1]}%, ${arr[2]}%, ${that.a})`);\n            return hsla;\n        },\n\n        toRGBA() {\n            const rgba = [...hsvToRgb(that.h, that.s, that.v), that.a];\n            rgba.toString = mapper(rgba, arr => `rgba(${arr[0]}, ${arr[1]}, ${arr[2]}, ${that.a})`);\n            return rgba;\n        },\n\n        toCMYK() {\n            const cmyk = hsvToCmyk(that.h, that.s, that.v);\n            cmyk.toString = mapper(cmyk, arr => `cmyk(${arr[0]}%, ${arr[1]}%, ${arr[2]}%, ${arr[3]}%)`);\n            return cmyk;\n        },\n\n        toHEXA() {\n            const hex = hsvToHex(that.h, that.s, that.v);\n\n            // Check if alpha channel make sense, convert it to 255 number space, convert\n            // to hex and pad it with zeros if needet.\n            const alpha = that.a >= 1 ? '' : Number((that.a * 255).toFixed(0))\n                .toString(16)\n                .toUpperCase().padStart(2, '0');\n\n            alpha && hex.push(alpha);\n            hex.toString = () => `#${hex.join('').toUpperCase()}`;\n            return hex;\n        },\n\n        clone: () => HSVaColor(that.h, that.s, that.v, that.a)\n    };\n\n    return that;\n}\n","import * as _ from '../utils/utils';\n\nconst clamp = v => Math.max(Math.min(v, 1), 0);\nexport default function Moveable(opt) {\n\n    const that = {\n\n        // Assign default values\n        options: Object.assign({\n            lock: null,\n            onchange: () => 0,\n            onstop: () => 0\n        }, opt),\n\n        _tapstart(evt) {\n            _.on(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.on(document, ['mousemove', 'touchmove'], that._tapmove);\n\n            // Prevent default touch event\n            evt.preventDefault();\n\n            // Trigger\n            that._tapmove(evt);\n        },\n\n        _tapmove(evt) {\n            const {options: {lock}, cache} = that;\n            const {element, wrapper} = options;\n            const b = wrapper.getBoundingClientRect();\n\n            let x = 0, y = 0;\n            if (evt) {\n                const touch = evt && evt.touches && evt.touches[0];\n                x = evt ? (touch || evt).clientX : 0;\n                y = evt ? (touch || evt).clientY : 0;\n\n                // Reset to bounds\n                if (x < b.left) x = b.left;\n                else if (x > b.left + b.width) x = b.left + b.width;\n                if (y < b.top) y = b.top;\n                else if (y > b.top + b.height) y = b.top + b.height;\n\n                // Normalize\n                x -= b.left;\n                y -= b.top;\n            } else if (cache) {\n                x = cache.x * b.width;\n                y = cache.y * b.height;\n            }\n\n            if (lock !== 'h') {\n                element.style.left = `calc(${x / b.width * 100}% - ${element.offsetWidth / 2}px)`;\n            }\n\n            if (lock !== 'v') {\n                element.style.top = `calc(${y / b.height * 100}% - ${element.offsetHeight / 2}px)`;\n            }\n\n            that.cache = {x: x / b.width, y: y / b.height};\n            const cx = clamp(x / wrapper.offsetWidth);\n            const cy = clamp(y / wrapper.offsetHeight);\n\n            switch (lock) {\n                case 'v':\n                    return options.onchange(cx);\n                case 'h':\n                    return options.onchange(cy);\n                default:\n                    return options.onchange(cx, cy);\n            }\n        },\n\n        _tapstop() {\n            that.options.onstop();\n            _.off(document, ['mouseup', 'touchend', 'touchcancel'], that._tapstop);\n            _.off(document, ['mousemove', 'touchmove'], that._tapmove);\n        },\n\n        trigger() {\n            that._tapmove();\n        },\n\n        update(x = 0, y = 0) {\n            const {left, top, width, height} = that.options.wrapper.getBoundingClientRect();\n\n            if (that.options.lock === 'h') {\n                y = x;\n            }\n\n            that._tapmove({\n                clientX: left + width * x,\n                clientY: top + height * y\n            });\n        },\n\n        destroy() {\n            const {options, _tapstart} = that;\n            _.off([options.wrapper, options.element], 'mousedown', _tapstart);\n            _.off([options.wrapper, options.element], 'touchstart', _tapstart, {\n                passive: false\n            });\n        }\n    };\n\n    // Initilize\n    const {options, _tapstart} = that;\n    _.on([options.wrapper, options.element], 'mousedown', _tapstart);\n    _.on([options.wrapper, options.element], 'touchstart', _tapstart, {\n        passive: false\n    });\n\n    return that;\n}\n","import * as _ from '../utils/utils';\r\n\r\nexport default function Selectable(opt = {}) {\r\n    opt = Object.assign({\r\n        onchange: () => 0,\r\n        className: '',\r\n        elements: []\r\n    }, opt);\r\n\r\n    const onTap = _.on(opt.elements, 'click', evt => {\r\n        opt.elements.forEach(e =>\r\n            e.classList[evt.target === e ? 'add' : 'remove'](opt.className)\r\n        );\r\n\r\n        opt.onchange(evt);\r\n    });\r\n\r\n    return {\r\n        destroy: () => _.off(...onTap)\r\n    };\r\n}\r\n","/**\r\n * Micro positioning-engine\r\n * @param el\r\n * @param reference\r\n * @param pos\r\n * @param padding\r\n * @returns {{update(): void}}\r\n * @constructor\r\n */\r\nexport default function Nanopop({el, reference, padding = 8}) {\r\n    const vBehaviour = {start: 'sme', middle: 'mse', end: 'ems'};\r\n    const hBehaviour = {top: 'tbrl', right: 'rltb', bottom: 'btrl', left: 'lrbt'};\r\n\r\n    const getInfo = ((cache = {}) => (pos, cached = cache[pos]) => {\r\n        if (cached) return cached;\r\n        const [position, variant = 'middle'] = pos.split('-');\r\n        const isVertical = (position === 'top' || position === 'bottom');\r\n\r\n        return cache[pos] = {\r\n            position,\r\n            variant,\r\n            isVertical\r\n        };\r\n    })();\r\n\r\n    return {\r\n        update(pos) {\r\n            const {position, variant, isVertical} = getInfo(pos);\r\n            const rb = reference.getBoundingClientRect();\r\n            const eb = el.getBoundingClientRect();\r\n\r\n            const positions = vertical => vertical ? {\r\n                t: rb.top - eb.height - padding,\r\n                b: rb.bottom + padding\r\n            } : {\r\n                r: rb.right + padding,\r\n                l: rb.left - eb.width - padding\r\n            };\r\n\r\n            const variants = vertical => vertical ? {\r\n                s: rb.left + rb.width - eb.width,\r\n                m: (-eb.width / 2) + (rb.left + rb.width / 2),\r\n                e: rb.left\r\n            } : {\r\n                s: rb.bottom - eb.height,\r\n                m: rb.bottom - rb.height / 2 - eb.height / 2,\r\n                e: rb.bottom - rb.height\r\n            };\r\n\r\n            const leastApplied = {};\r\n\r\n            function apply(bevs, vars, styleprop) {\r\n                const vertical = styleprop === 'top';\r\n                const adder = vertical ? eb.height : eb.width;\r\n                const win = window[vertical ? 'innerHeight' : 'innerWidth'];\r\n\r\n                for (const ch of bevs) {\r\n                    const v = vars[ch];\r\n                    const sv = leastApplied[styleprop] = `${v}px`;\r\n\r\n                    if (v > 0 && (v + adder) < win) {\r\n                        el.style[styleprop] = sv;\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            for (const rot of [isVertical, !isVertical]) {\r\n                const v2Ok = apply(hBehaviour[position], positions(rot), rot ? 'top' : 'left');\r\n                const v1Ok = apply(vBehaviour[variant], variants(rot), rot ? 'left' : 'top');\r\n\r\n                if (v2Ok && v1Ok) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            el.style.left = leastApplied.left;\r\n            el.style.top = leastApplied.top;\r\n        }\r\n    };\r\n}\r\n","import * as _ from './utils/utils';\r\n\r\nexport default ({components: c, strings: s, useAsButton, inline, appClass, theme, lockOpacity: lo}) => {\r\n    const hidden = con => con ? '' : 'style=\"display:none\" hidden';\r\n\r\n    const root = _.createFromTemplate(`\r\n      <div :ref=\"root\" class=\"pickr\">\r\n\r\n        ${useAsButton ? '' : '<button type=\"button\" :ref=\"button\" class=\"pcr-button\"></button>'}\r\n\r\n        <div :ref=\"app\" class=\"pcr-app ${appClass || ''}\" data-theme=\"${theme}\" ${inline ? 'style=\"position: unset\"' : ''}>\r\n          <div class=\"pcr-selection\" ${hidden(c.palette)}>\r\n            <div :obj=\"preview\" class=\"pcr-color-preview\" ${hidden(c.preview)}>\r\n              <button type=\"button\" :ref=\"lastColor\" class=\"pcr-last-color\"></button>\r\n              <div :ref=\"currentColor\" class=\"pcr-current-color\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"palette\" class=\"pcr-color-palette\">\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"palette\" class=\"pcr-palette\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"hue\" class=\"pcr-color-chooser\" ${hidden(c.hue)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-hue pcr-slider\"></div>\r\n            </div>\r\n\r\n            <div :obj=\"opacity\" class=\"pcr-color-opacity\" ${hidden(c.opacity)}>\r\n              <div :ref=\"picker\" class=\"pcr-picker\"></div>\r\n              <div :ref=\"slider\" class=\"pcr-opacity pcr-slider\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"pcr-swatches ${c.palette ? '' : ' pcr-last'}\" :ref=\"swatches\"></div> \r\n\r\n          <div :obj=\"interaction\" class=\"pcr-interaction\" ${hidden(Object.keys(c.interaction).length)}>\r\n            <input :ref=\"result\" class=\"pcr-result\" type=\"text\" spellcheck=\"false\" ${hidden(c.interaction.input)}>\r\n\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HEXA\" value=\"${lo ? 'HEX' : 'HEXA'}\" type=\"button\" ${hidden(c.interaction.hex)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"RGBA\" value=\"${lo ? 'RGB' : 'RGBA'}\" type=\"button\" ${hidden(c.interaction.rgba)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSLA\" value=\"${lo ? 'HSL' : 'HSLA'}\" type=\"button\" ${hidden(c.interaction.hsla)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"HSVA\" value=\"${lo ? 'HSV' : 'HSVA'}\" type=\"button\" ${hidden(c.interaction.hsva)}>\r\n            <input :arr=\"options\" class=\"pcr-type\" data-type=\"CMYK\" value=\"CMYK\" type=\"button\" ${hidden(c.interaction.cmyk)}>\r\n\r\n            <input :ref=\"save\" class=\"pcr-save\" value=\"${s.save || 'Save'}\" type=\"button\" ${hidden(c.interaction.save)}>\r\n            <input :ref=\"cancel\" class=\"pcr-clear\" value=\"${s.cancel || 'Cancel'}\" type=\"button\" ${hidden(c.interaction.cancel)}>\r\n            <input :ref=\"clear\" class=\"pcr-clear\" value=\"${s.clear || 'Clear'}\" type=\"button\" ${hidden(c.interaction.clear)}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `);\r\n\r\n    const int = root.interaction;\r\n\r\n    // Select option which is not hidden\r\n    int.options.find(o => !o.hidden && !o.classList.add('active'));\r\n\r\n    // Create method to find currenlty active option\r\n    int.type = () => int.options.find(e => e.classList.contains('active'));\r\n    return root;\r\n}\r\n","// Import utils\nimport * as _        from './utils/utils';\nimport {parseToHSVA} from './utils/color';\n\n// Import classes\nimport {HSVaColor} from './utils/hsvacolor';\nimport Moveable    from './libs/moveable';\nimport Selectable  from './libs/selectable';\nimport Nanopop     from './libs/nanopop';\nimport buildPickr  from './template';\n\nclass Pickr {\n\n    // Will be used to prevent specific actions during initilization\n    _initializingActive = true;\n\n    // If the current color value should be recalculated\n    _recalc = true;\n\n    // Current and last color for comparison\n    _color = HSVaColor();\n    _lastColor = HSVaColor();\n    _swatchColors = [];\n\n    // Evenlistener name: [callbacks]\n    _eventListener = {\n        init: [],\n        save: [],\n        hide: [],\n        show: [],\n        clear: [],\n        change: [],\n        changestop: [],\n        cancel: [],\n        swatchselect: []\n    };\n\n    constructor(opt) {\n\n        // Assign default values\n        this.options = opt = Object.assign({\n            appClass: null,\n            theme: 'classic',\n            useAsButton: false,\n            disabled: false,\n            comparison: true,\n            closeOnScroll: false,\n            outputPrecision: 0,\n            lockOpacity: false,\n            autoReposition: true,\n\n            components: {\n                interaction: {}\n            },\n\n            strings: {},\n            swatches: null,\n            inline: false,\n            sliders: null,\n\n            default: '#42445a',\n            defaultRepresentation: null,\n            position: 'bottom-middle',\n            adjustableNumbers: true,\n            showAlways: false,\n\n            closeWithKey: 'Escape'\n        }, opt);\n\n        const {swatches, inline, components, theme, sliders, lockOpacity} = opt;\n\n        if (['nano', 'monolith'].includes(theme) && !sliders) {\n            opt.sliders = 'h';\n        }\n\n        // Check interaction section\n        if (!components.interaction) {\n            components.interaction = {};\n        }\n\n        // Overwrite palette if preview, opacity or hue are true\n        const {preview, opacity, hue, palette} = components;\n        components.opacity = (!lockOpacity && opacity);\n        components.palette = palette || preview || opacity || hue;\n\n        // Per default enabled if inline\n        if (inline) {\n            opt.showAlways = true;\n        }\n\n        // Initialize picker\n        this._preBuild();\n        this._buildComponents();\n        this._bindEvents();\n        this._finalBuild();\n\n        // Append pre-defined swatch colors\n        if (swatches && swatches.length) {\n            swatches.forEach(color => this.addSwatch(color));\n        }\n\n        // Initialize positioning engine\n        this._nanopop = Nanopop({\n            reference: this._root.button,\n            el: this._root.app\n        });\n\n        // Initilization is finish, pickr is visible and ready for usage\n        const {app} = this._root;\n        const that = this;\n        requestAnimationFrame((function cb() {\n\n            if (!app.offsetWidth && app.parentElement !== document.body) {\n                return requestAnimationFrame(cb);\n            }\n\n            // Apply default color\n            that.setColor(opt.default);\n            that._rePositioningPicker();\n\n            // Initialize color representation\n            if (opt.defaultRepresentation) {\n                that._representation = opt.defaultRepresentation;\n                that.setColorRepresentation(that._representation);\n            }\n\n            // Show pickr if locked\n            if (opt.showAlways) {\n                that.show();\n            }\n\n            // Initialization is done - pickr is usable, fire init event\n            that._initializingActive = false;\n            that._emit('init');\n        }));\n    }\n\n    // Does only the absolutly basic thing to initialize the components\n    _preBuild() {\n        const opt = this.options;\n\n        // Check if element is selector\n        if (typeof opt.el === 'string') {\n\n            // Resolve possible shadow dom access\n            opt.el = opt.el.split(/>>/g).reduce((pv, cv, ci, a) => {\n                pv = pv.querySelector(cv);\n                return ci < a.length - 1 ? pv.shadowRoot : pv;\n            }, document);\n        }\n\n        // Create element and append it to body to\n        // prevent initialization errors\n        this._root = buildPickr(opt);\n\n        // Check if a custom button is used\n        if (opt.useAsButton) {\n            this._root.button = opt.el; // Replace button with customized button\n        }\n\n        document.body.appendChild(this._root.root);\n    }\n\n    _finalBuild() {\n        const opt = this.options;\n        const root = this._root;\n\n        // Remove from body\n        document.body.removeChild(root.root);\n\n        if (opt.inline) {\n            const parent = opt.el.parentElement;\n\n            if (opt.el.nextSibling) {\n                parent.insertBefore(root.app, opt.el.nextSibling);\n            } else {\n                parent.appendChild(root.app);\n            }\n        } else {\n            document.body.appendChild(root.app);\n        }\n\n        // Don't replace the the element if a custom button is used\n        if (!opt.useAsButton) {\n\n            // Replace element with actual color-picker\n            opt.el.parentNode.replaceChild(root.root, opt.el);\n        } else if (opt.inline) {\n            opt.el.remove();\n        }\n\n        // Check if it should be immediatly disabled\n        if (opt.disabled) {\n            this.disable();\n        }\n\n        // Check if color comparison is disabled, if yes - remove transitions so everything keeps smoothly\n        if (!opt.comparison) {\n            root.button.style.transition = 'none';\n            if (!opt.useAsButton) {\n                root.preview.lastColor.style.transition = 'none';\n            }\n        }\n\n        this.hide();\n    }\n\n    _buildComponents() {\n\n        // Instance reference\n        const inst = this;\n        const cs = this.options.components;\n        const sliders = (inst.options.sliders || 'v').repeat(2);\n        const [so, sh] = sliders.match(/^[vh]+$/g) ? sliders : [];\n\n        const components = {\n\n            palette: Moveable({\n                element: inst._root.palette.picker,\n                wrapper: inst._root.palette.palette,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(x, y) {\n                    if (!cs.palette) return;\n                    const {_color, _root, options} = inst;\n\n                    // Update the input field only if the user is currently not typing\n                    if (inst._recalc) {\n\n                        // Calculate saturation based on the position\n                        _color.s = x * 100;\n\n                        // Calculate the value\n                        _color.v = 100 - y * 100;\n\n                        // Prevent falling under zero\n                        _color.v < 0 ? _color.v = 0 : 0;\n                        inst._updateOutput();\n                    }\n\n                    // Set picker and gradient color\n                    let cssRGBaString = _color.toRGBA().toString(0);\n                    this.element.style.background = cssRGBaString;\n                    this.wrapper.style.background = `\n                        linear-gradient(to top, rgba(0, 0, 0, ${_color.a}), transparent),\n                        linear-gradient(to left, hsla(${_color.h}, 100%, 50%, ${_color.a}), rgba(255, 255, 255, ${_color.a}))\n                    `;\n\n                    // Check if color is locked\n                    if (!options.comparison) {\n                        _root.button.style.color = cssRGBaString;\n\n                        if (!options.useAsButton) {\n                            _root.preview.lastColor.style.color = cssRGBaString;\n                        }\n                    }\n\n                    // Change current color\n                    _root.preview.currentColor.style.color = cssRGBaString;\n\n                    if (!inst.options.comparison) {\n\n                        // If the user changes the color, remove the cleared icon\n                        _root.button.classList.remove('clear');\n                    }\n                }\n            }),\n\n            hue: Moveable({\n                lock: sh === 'v' ? 'h' : 'v',\n                element: inst._root.hue.picker,\n                wrapper: inst._root.hue.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.hue || !cs.palette) return;\n\n                    // Calculate hue\n                    if (inst._recalc) {\n                        inst._color.h = v * 360;\n                    }\n\n                    // Update color\n                    this.element.style.backgroundColor = `hsl(${inst._color.h}, 100%, 50%)`;\n                    components.palette.trigger();\n                }\n            }),\n\n            opacity: Moveable({\n                lock: so === 'v' ? 'h' : 'v',\n                element: inst._root.opacity.picker,\n                wrapper: inst._root.opacity.slider,\n\n                onstop: () => inst._emit('changestop', inst),\n                onchange(v) {\n                    if (!cs.opacity || !cs.palette) return;\n\n                    // Calculate opacity\n                    if (inst._recalc) {\n                        inst._color.a = Math.round(v * 1e2) / 100;\n                    }\n\n                    // Update color\n                    this.element.style.background = `rgba(0, 0, 0, ${inst._color.a})`;\n                    components.palette.trigger();\n                }\n            }),\n\n            selectable: Selectable({\n                elements: inst._root.interaction.options,\n                className: 'active',\n\n                onchange(e) {\n                    inst._representation = e.target.getAttribute('data-type').toUpperCase();\n                    inst._updateOutput();\n                }\n            })\n        };\n\n        this._components = components;\n    }\n\n    _bindEvents() {\n        const {_root, options} = this;\n\n        const eventBindings = [\n\n            // Clear color\n            _.on(_root.interaction.clear, 'click', () => this._clearColor()),\n\n            // Select last color on click\n            _.on([\n                _root.interaction.cancel,\n                _root.preview.lastColor\n            ], 'click', () => {\n                this._emit('cancel', this);\n                this.setHSVA(...this._lastColor.toHSVA(), true);\n            }),\n\n            // Save color\n            _.on(_root.interaction.save, 'click', () => {\n                !this.applyColor() && !options.showAlways && this.hide();\n            }),\n\n            // Detect user input and disable auto-recalculation\n            _.on(_root.interaction.result, ['keyup', 'input'], e => {\n                this._recalc = false;\n\n                // Fire listener if initialization is finish and changed color was valid\n                if (this.setColor(e.target.value, true) && !this._initializingActive) {\n                    this._emit('change', this._color);\n                }\n\n                e.stopImmediatePropagation();\n            }),\n\n            // Cancel input detection on color change\n            _.on([\n                _root.palette.palette,\n                _root.palette.picker,\n                _root.hue.slider,\n                _root.hue.picker,\n                _root.opacity.slider,\n                _root.opacity.picker\n            ], ['mousedown', 'touchstart'], () => this._recalc = true)\n        ];\n\n        // Provide hiding / showing abilities only if showAlways is false\n        if (!options.showAlways) {\n            const ck = options.closeWithKey;\n\n            eventBindings.push(\n                // Save and hide / show picker\n                _.on(_root.button, 'click', () => this.isOpen() ? this.hide() : this.show()),\n\n                // Close with escape key\n                _.on(document, 'keyup', e => this.isOpen() && (e.key === ck || e.code === ck) && this.hide()),\n\n                // Cancel selecting if the user taps behind the color picker\n                _.on(document, ['touchstart', 'mousedown'], e => {\n                    if (this.isOpen() && !_.eventPath(e).some(el => el === _root.app || el === _root.button)) {\n                        this.hide();\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Make input adjustable if enabled\n        if (options.adjustableNumbers) {\n            const ranges = {\n                rgba: [255, 255, 255, 1],\n                hsva: [360, 100, 100, 1],\n                hsla: [360, 100, 100, 1],\n                cmyk: [100, 100, 100, 100]\n            };\n\n            _.adjustableInputNumbers(_root.interaction.result, (o, step, index) => {\n                const range = ranges[this.getColorRepresentation().toLowerCase()];\n\n                if (range) {\n                    const max = range[index];\n\n                    // Calculate next reasonable number\n                    const nv = o + (max >= 100 ? step * 1000 : step);\n\n                    // Apply range of zero up to max, fix floating-point issues\n                    return nv <= 0 ? 0 : Number((nv < max ? nv : max).toPrecision(3));\n                } else {\n                    return o;\n                }\n            });\n        }\n\n        if (options.autoReposition && !options.inline) {\n            let timeout = null;\n            const that = this;\n\n            // Re-calc position on window resize, scroll and wheel\n            eventBindings.push(\n                _.on(window, ['scroll', 'resize'], () => {\n                    if (that.isOpen()) {\n\n                        if (options.closeOnScroll) {\n                            that.hide();\n                        }\n\n                        if (timeout === null) {\n                            timeout = setTimeout(() => timeout = null, 100);\n\n                            // Update position on every frame\n                            requestAnimationFrame(function rs() {\n                                that._rePositioningPicker();\n                                (timeout !== null) && requestAnimationFrame(rs);\n                            });\n                        } else {\n                            clearTimeout(timeout);\n                            timeout = setTimeout(() => timeout = null, 100);\n                        }\n                    }\n                }, {capture: true})\n            );\n        }\n\n        // Save bindings\n        this._eventBindings = eventBindings;\n    }\n\n    _rePositioningPicker() {\n        const {options} = this;\n\n        // No repositioning needed if inline\n        if (!options.inline) {\n            const {app} = this._root;\n\n            if (matchMedia('(max-width: 576px)').matches) {\n                Object.assign(app.style, {\n                    margin: 'auto',\n                    height: `${app.getBoundingClientRect().height}px`,\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0\n                });\n            } else {\n                Object.assign(app.style, {\n                    margin: null,\n                    right: null,\n                    top: null,\n                    bottom: null,\n                    left: null,\n                    height: null\n                });\n\n                this._nanopop.update(options.position);\n            }\n        }\n    }\n\n    _updateOutput() {\n        const {_root, _color, options} = this;\n\n        // Check if component is present\n        if (_root.interaction.type()) {\n\n            // Construct function name and call if present\n            const method = `to${_root.interaction.type().getAttribute('data-type')}`;\n            _root.interaction.result.value = typeof _color[method] === 'function' ?\n                _color[method]().toString(options.outputPrecision) : '';\n        }\n\n        // Fire listener if initialization is finish\n        if (!this._initializingActive && this._recalc) {\n            this._emit('change', _color);\n        }\n    }\n\n    _clearColor(silent = false) {\n        const {_root, options} = this;\n\n        // Change only the button color if it isn't customized\n        if (!options.useAsButton) {\n            _root.button.style.color = 'rgba(0, 0, 0, 0.15)';\n        }\n\n        _root.button.classList.add('clear');\n\n        if (!options.showAlways) {\n            this.hide();\n        }\n\n        if (!this._initializingActive && !silent) {\n\n            // Fire listener\n            this._emit('save', null);\n            this._emit('clear', this);\n        }\n    }\n\n    _parseLocalColor(str) {\n        const {values, type, a} = parseToHSVA(str);\n        const {lockOpacity} = this.options;\n        const alphaMakesAChange = a !== undefined && a !== 1;\n\n        // If no opacity is applied, add undefined at the very end which gets\n        // set to 1 in setHSVA\n        if (values && values.length === 3) {\n            values[3] = undefined;\n        }\n\n        return {\n            values: (!values || (lockOpacity && alphaMakesAChange)) ? null : values,\n            type\n        };\n    }\n\n    _emit(event, ...args) {\n        this._eventListener[event].forEach(cb => cb(...args, this));\n    }\n\n    on(event, cb) {\n\n        // Validate\n        if (typeof cb === 'function' && typeof event === 'string' && event in this._eventListener) {\n            this._eventListener[event].push(cb);\n        }\n\n        return this;\n    }\n\n    off(event, cb) {\n        const callBacks = this._eventListener[event];\n\n        if (callBacks) {\n            const index = callBacks.indexOf(cb);\n\n            if (~index) {\n                callBacks.splice(index, 1);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Appends a color to the swatch palette\n     * @param color\n     * @returns {boolean}\n     */\n    addSwatch(color) {\n        const {values} = this._parseLocalColor(color);\n\n        if (values) {\n            const {_swatchColors, _root} = this;\n            const hsvaColorObject = HSVaColor(...values);\n\n            // Create new swatch HTMLElement\n            const element = _.createElementFromString(\n                `<button type=\"button\" style=\"color: ${hsvaColorObject.toRGBA().toString(0)}\"/>`\n            );\n\n            // Append element and save swatch data\n            _root.swatches.appendChild(element);\n            _swatchColors.push({element, hsvaColorObject});\n\n            // Bind event\n            this._eventBindings.push(\n                _.on(element, 'click', () => {\n                    this.setHSVA(...hsvaColorObject.toHSVA(), true);\n                    this._emit('swatchselect', hsvaColorObject);\n                    this._emit('change', hsvaColorObject);\n                })\n            );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Removes a swatch color by it's index\n     * @param index\n     * @returns {boolean}\n     */\n    removeSwatch(index) {\n        const swatchColor = this._swatchColors[index];\n\n        // Check swatch data\n        if (swatchColor) {\n            const {element} = swatchColor;\n\n            // Remove HTML child and swatch data\n            this._root.swatches.removeChild(element);\n            this._swatchColors.splice(index, 1);\n            return true;\n        }\n\n        return false;\n    }\n\n    applyColor(silent = false) {\n        const {preview, button} = this._root;\n\n        // Change preview and current color\n        const cssRGBaString = this._color.toRGBA().toString();\n        preview.lastColor.style.color = cssRGBaString;\n\n        // Change only the button color if it isn't customized\n        if (!this.options.useAsButton) {\n            button.style.color = cssRGBaString;\n        }\n\n        // User changed the color so remove the clear clas\n        button.classList.remove('clear');\n\n        // Save last color\n        this._lastColor = this._color.clone();\n\n        // Fire listener\n        if (!this._initializingActive && !silent) {\n            this._emit('save', this._color);\n        }\n    }\n\n    /**\n     * Destroy's all functionalitys\n     */\n    destroy() {\n        this._eventBindings.forEach(args => _.off(...args));\n\n        Object.keys(this._components)\n            .forEach(key => this._components[key].destroy());\n    }\n\n    /**\n     * Destroy's all functionalitys and removes\n     * the pickr element.\n     */\n    destroyAndRemove() {\n        this.destroy();\n        const {root, app} = this._root;\n\n        // Remove element\n        if (root.parentElement) {\n            root.parentElement.removeChild(root);\n        }\n\n        // remove .pcr-app\n        app.parentElement.removeChild(app);\n\n        // There are references to various DOM elements stored in the pickr instance\n        // This cleans all of them to avoid detached DOMs\n        Object.keys(this)\n            .forEach(key => this[key] = null);\n    }\n\n    /**\n     * Hides the color-picker ui.\n     */\n    hide() {\n\n        if (!this.options.inline) {\n            this._root.app.classList.remove('visible');\n            this._emit('hide', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Shows the color-picker ui.\n     */\n    show() {\n\n        if (!this.options.inline && !this.options.disabled) {\n            this._root.app.classList.add('visible');\n            this._rePositioningPicker();\n            this._emit('show', this);\n        }\n\n        return this;\n    }\n\n    /**\n     * @return {boolean} If the color picker is currently open\n     */\n    isOpen() {\n        return this._root.app.classList.contains('visible');\n    }\n\n    /**\n     * Set a specific color.\n     * @param h Hue\n     * @param s Saturation\n     * @param v Value\n     * @param a Alpha channel (0 - 1)\n     * @param silent If the button should not change the color\n     * @return boolean if the color has been accepted\n     */\n    setHSVA(h = 360, s = 0, v = 0, a = 1, silent = false) {\n\n        // Deactivate color calculation\n        const recalc = this._recalc; // Save state\n        this._recalc = false;\n\n        // Validate input\n        if (h < 0 || h > 360 || s < 0 || s > 100 || v < 0 || v > 100 || a < 0 || a > 1) {\n            return false;\n        }\n\n        // Override current color and re-active color calculation\n        this._color = HSVaColor(h, s, v, a);\n\n        // Update slider and palette\n        const {hue, opacity, palette} = this._components;\n        hue.update((h / 360));\n        opacity.update(a);\n        palette.update(s / 100, 1 - (v / 100));\n\n        // Check if call is silent\n        if (!silent) {\n            this.applyColor();\n        }\n\n        // Update output if recalculation is enabled\n        if (recalc) {\n            this._updateOutput();\n        }\n\n        // Restore old state\n        this._recalc = recalc;\n        return true;\n    }\n\n    /**\n     * Tries to parse a string which represents a color.\n     * Examples: #fff\n     *           rgb 10 10 200\n     *           hsva 10 20 5 0.5\n     * @param string\n     * @param silent\n     */\n    setColor(string, silent = false) {\n\n        // Check if null\n        if (string === null) {\n            this._clearColor(silent);\n            return true;\n        }\n\n        const {values, type} = this._parseLocalColor(string);\n\n        // Check if color is ok\n        if (values) {\n\n            // Change selected color format\n            const utype = type.toUpperCase();\n            const {options} = this._root.interaction;\n            const target = options.find(el => el.getAttribute('data-type') === utype);\n\n            // Auto select only if not hidden\n            if (target && !target.hidden) {\n                for (const el of options) {\n                    el.classList[el === target ? 'add' : 'remove']('active');\n                }\n            }\n\n            this.setColorRepresentation(utype);\n            return this.setHSVA(...values, silent);\n        }\n\n        return false;\n    }\n\n    /**\n     * Changes the color _representation.\n     * Allowed values are HEX, RGB, HSV, HSL and CMYK\n     * @param type\n     * @returns {boolean} if the selected type was valid.\n     */\n    setColorRepresentation(type) {\n\n        // Force uppercase to allow a case-sensitiv comparison\n        type = type.toUpperCase();\n\n        // Find button with given type and trigger click event\n        return !!this._root.interaction.options\n            .find(v => v.getAttribute('data-type').startsWith(type) && !v.click());\n    }\n\n    /**\n     * Returns the current color representaion. See setColorRepresentation\n     * @returns {*}\n     */\n    getColorRepresentation() {\n        return this._representation;\n    }\n\n    /**\n     * @returns HSVaColor Current HSVaColor object.\n     */\n    getColor() {\n        return this._color;\n    }\n\n    /**\n     * @returns The root HTMLElement with all his components.\n     */\n    getRoot() {\n        return this._root;\n    }\n\n    /**\n     * Disable pickr\n     */\n    disable() {\n        this.hide();\n        this.options.disabled = true;\n        this._root.button.classList.add('disabled');\n        return this;\n    }\n\n    /**\n     * Enable pickr\n     */\n    enable() {\n        this.options.disabled = false;\n        this._root.button.classList.remove('disabled');\n        return this;\n    }\n}\n\n// Expose pickr utils\nPickr.utils = _;\n\n// Expose libraries for easier integration in things build on top of it\nPickr.libs = {\n    HSVaColor,\n    Moveable,\n    Nanopop,\n    Selectable\n};\n\n// Create instance via method\nPickr.create = options => new Pickr(options);\n\n// Assign version and export\nPickr.version = '1.2.6';\nexport default Pickr;\n"],"sourceRoot":""}